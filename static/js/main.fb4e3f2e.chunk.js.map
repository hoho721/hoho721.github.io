{"version":3,"sources":["redux/counterSlice.js","redux/authSlice.js","redux/appSlice.js","redux/index.js","AppConstants.js","api/Axios.js","api/AuthApi.js","utils/utils.js","pages/LoginPage.js","routes/AuthRoutes.js","components/TopMenu.js","components/Paging.js","api/BoardApi.js","pages/EventPage.js","pages/NotifyPage.js","api/UserApi.js","api/MessageApi.js","pages/UserPage.js","pages/StatsPage.js","pages/UserPointListPage.js","pages/UserCouponListPage.js","routes/MainRoutes.js","pages/MainPage.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","authSlice","token","setToken","console","log","appSlice","menu","href","setMenu","configureStore","reducer","counter","counterReducer","auth","authReducer","app","appReducer","HOST","VERSION","MENU_LIST","localStorage","getItem","instance","axios","create","baseURL","AppConstants","timeout","headers","apiLogin","email","password","a","Axios","post","getCreatedAt","createdAt","date","Date","getMonth","getDate","getFullYear","LoginPage","useReducer","setState","dispatch","useDispatch","onChange","e","target","onClickLogin","preventDefault","toast","warn","result","data","ok","error","setItem","className","method","type","htmlFor","id","autoComplete","required","placeholder","onClick","xmlns","viewBox","fill","aria-hidden","fillRule","d","clipRule","AuthRoutes","path","component","exact","from","to","classNames","classes","filter","Boolean","join","TopMenu","props","onClickMenu","onClickLogOut","onClickChangePassword","as","open","Button","map","item","aria-current","undefined","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","Item","active","Panel","Paging","totalCount","startNo","pageNo","pageCount","totalPageCount","clickNext","clickPrev","clickPageNo","aria-label","page","apiBoardList","limit","boardType","get","params","apiBoardTotalCount","apiDeleteBoard","apiCreateEventBoard","title","content","apiCreateNotifyBoard","EventPage","useState","setTotalCount","setPageNo","setStartNo","setTotalPageCount","list","setList","isOpen","setIsOpen","setTitle","setContent","count","Number","getBoardList","deleteBoard","board","createBoard","viewCount","newList","info","findIndex","window","confirm","closeModal","useEffect","getTotalCount","pCount","scope","onClickDelete","newStartPageNo","appear","show","onClose","Overlay","Child","Title","rows","NotifyPage","apiUserTotalCount","apiUserList","apiSearchUser","keyword","apiUserDeny","userId","apiUserAdmit","apiUserPointHistory","apiUserPointHistoryTotalCount","apiUserCouponHistory","apiUserConnectionCount","apiTotalRewardToday","apiPhoneVerify","phoneNo","apiSendPointMessage","point","description","LIMIT","UserPage","withRouter","prevState","setPrevState","setKeyword","setPoint","setDescription","selUser","setSelUser","isOpenPhone","setIsOpenPhone","setPhoneNo","getUserList","length","denyUser","user","nick","admitUser","sendPoint","verifyUserPhoneNo","index","getGenderText","gender","status","closePhoneModal","numPoint","person","uid","checked","onChangeStatus","birth","accPoint","StatsPage","connectionCount","setConnectionCount","setRewardList","getTotalRewardToday","getUserConnectionCount","dayday","reward","UserPointListPage","history","useParams","getPointHistory","getDateTime","getHours","getMinutes","goBack","pointType","colSpan","UserCouponListPage","getCouponHistory","brandName","goodsName","goodsCode","pinNo","realPrice","MainRoutes","Main","useSelector","newMenu","push","AppRouter","isLoggedIn","App","setIsLoaded","tk","position","autoClose","hideProgressBar","newestOnTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.fb4e3f2e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState: {\n        value: 0,\n    },\n    reducers: {\n        increment: (state) => {\n            // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n            // doesn't actually mutate the state because it uses the Immer library,\n            // which detects changes to a \"draft state\" and produces a brand new\n            // immutable state based off those changes\n            state.value += 1\n        },\n        decrement: (state) => {\n            state.value -= 1\n        },\n        incrementByAmount: (state, action) => {\n            state.value += action.payload\n        },\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\nexport default counterSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        token: null\n    },\n    reducers: {\n        setToken: (state, action) => {            \n            console.log(action)\n        \n            state.token = action.payload.token\n        }\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setToken } = authSlice.actions\n\nexport default authSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n    name: 'app',\n    initialState: {\n        menu: { name: '사용자', href: '/user' }\n    },\n    reducers: {\n        setMenu: (state, action) => {        \n            state.menu = action.payload.menu\n        },\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setMenu } = appSlice.actions\n\nexport default appSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './counterSlice';\nimport authReducer from './authSlice';\nimport appReducer from './appSlice';\n\nexport default configureStore({\n    reducer: {\n        counter: counterReducer,\n        auth: authReducer,\n        app: appReducer,\n    },\n})\n","export default {\n    HOST: \"https://adminapi.waytowork.net\",\n    //HOST: \"http://127.0.0.1:9200\",\n    VERSION: \"Ver.1.0.0\",    \n    MENU_LIST: [\n        { name: '사용자', href: '/user' },\n        { name: '이벤트', href: '/event' },\n        { name: '공지사항', href: '/notify' },\n        { name: '통계', href: '/stats' },\n    ],\n}","import axios from 'axios';\nimport AppConstants from '../AppConstants';\n\nconst token = localStorage.getItem(\"token\");\nconst instance = axios.create({\n    baseURL: AppConstants.HOST,\n    timeout: 10000,\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'x-jwt': token\n    },\n});\n\n\nexport default instance;","import Axios from './Axios';\n\n// const AuthApi = {\n//     login: (email, password) => Axios.post('/admin/login', {\n//         email,\n//         password\n//     })\n// }\n\n// export default AuthApi;\n\nexport const apiLogin = async (email, password) => Axios.post('/admin/login', {\n    email,\n    password\n});","export function reducer(state, action) {\n    return {\n        ...state,\n        [action.name]: action.value\n    }\n}\n\nexport function getCreatedAt(createdAt) {\n    const date = new Date(createdAt);\n    return `${date.getMonth()} / ${date.getDate()} / ${date.getFullYear()} `\n}","import React, { useReducer } from 'react';\nimport AppConstants from '../AppConstants';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { apiLogin } from '../api/AuthApi';\nimport { setToken } from '../redux/authSlice';\nimport { reducer } from '../utils/utils'\n\n// function reducer(state, action) {\n//     return {\n//         ...state,\n//         [action.name]: action.value\n//     }\n// }\n\nexport default function LoginPage() {\n\n    // * 상태 설정\n    const [state, setState] = useReducer(reducer, {\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = state;\n\n    // * 전역 상태\n    const dispatch = useDispatch();\n\n    // * 핸들링\n    const onChange = e => {\n        setState(e.target);\n    };\n\n    const onClickLogin = async (e) => {\n        e.preventDefault()\n\n        if (!email) {\n            toast.warn('이메일을 입력하세요.')\n            return\n        }\n\n        if (!password) {\n            toast.warn('패스워드를 입력하세요.')\n            return\n        }\n\n        try {\n            const result = await apiLogin(email, password);\n\n            console.log(result);\n\n            if (result && result.data) {\n                const { ok, error, token } = result.data;\n\n                if (ok) {\n                    await localStorage.setItem(\"token\", token);\n                    dispatch(setToken({ token }));\n                } else {\n                    toast.error(error);\n                }\n            }\n        } catch (err) {\n            toast.error(err);\n        }\n\n    }\n\n    return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-md w-full space-y-8\">\n                <div className=\"\">\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n                        {`출근길 관리자 ${AppConstants.VERSION}`}\n                    </h2>\n                </div>\n                <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\n                    <input type=\"hidden\" name=\"remember\" value=\"true\" />\n                    <div className=\"rounded-md shadow-sm -space-y-px\">\n                        <div>\n                            <label htmlFor=\"email-address\" className=\"sr-only\">Email address</label>\n                            <input\n                                id=\"email-address\"\n                                name=\"email\"\n                                type=\"email\"\n                                autoComplete=\"email\"\n                                required\n                                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                                placeholder=\"Email address\"\n                                value={email}\n                                onChange={onChange} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\" className=\"sr-only\">Password</label>\n                            <input\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                required\n                                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                                placeholder=\"Password\"\n                                value={password}\n                                onChange={onChange} />\n                        </div>\n                    </div>\n\n                    <div>\n                        <button\n                            type=\"submit\"\n                            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                            onClick={onClickLogin}>\n                            <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                                <svg className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                    <path fillRule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clipRule=\"evenodd\" />\n                                </svg>\n                            </span>\n                            로그인\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n};","import React from \"react\";\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport LoginPage from \"../pages/LoginPage\";\n\nconst AuthRoutes = () => (\n    <Switch>    \n        <Route path=\"/\" component={LoginPage} exact />\n        <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n);\n\nexport default AuthRoutes; ","import React from 'react';\nimport { Fragment } from 'react'\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { UserCircleIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\nimport AppConstants from '../AppConstants';\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\n\nconst TopMenu = (props) => {\n    const { menu, onClickMenu, onClickLogOut, onClickChangePassword } = props;\n\n    return (\n        <Disclosure as=\"nav\" className=\"bg-gray-800\">\n            {({ open }) => (\n                <>\n                    <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n                        <div className=\"relative flex items-center justify-between h-16\">\n                            <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                                {/* Mobile menu button*/}\n                                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                                    <span className=\"sr-only\">Open main menu</span>\n                                    {open ? (\n                                        <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                                    ) : (\n                                        <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                                    )}\n                                </Disclosure.Button>\n                            </div>\n                            <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                                <div className=\"flex-shrink-0 flex items-center\">\n                                    <h2 className=\"xl text-indigo-100\">{`${AppConstants.VERSION}`}</h2>\n                                </div>\n                                <div className=\"hidden sm:block sm:ml-6\">\n                                    <div className=\"flex space-x-4\">\n                                        {AppConstants.MENU_LIST.map((item) => (\n                                            <a\n                                                key={item.name}                                                \n                                                className={classNames(\n                                                    menu.name === item.name ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white cursor-pointer',\n                                                    'px-3 py-2 rounded-md text-sm font-medium cursor-pointer'\n                                                )}\n                                                aria-current={menu.name === item.name ? 'page' : undefined}\n                                                onClick={() => onClickMenu(item)}\n                                            >\n                                                {item.name}\n                                            </a>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n\n                                {/* Profile dropdown */}\n                                <Menu as=\"div\" className=\"ml-3 relative\">\n                                    <div>\n                                        <Menu.Button className=\"bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                                            <span className=\"sr-only\">Open user menu</span>\n                                            <UserCircleIcon className=\"h-8 w-8 rounded-full bg-indigo-50\" aria-hidden=\"true\" />\n                                        </Menu.Button>\n                                    </div>\n                                    <Transition\n                                        as={Fragment}\n                                        enter=\"transition ease-out duration-100\"\n                                        enterFrom=\"transform opacity-0 scale-95\"\n                                        enterTo=\"transform opacity-100 scale-100\"\n                                        leave=\"transition ease-in duration-75\"\n                                        leaveFrom=\"transform opacity-100 scale-100\"\n                                        leaveTo=\"transform opacity-0 scale-95\"\n                                    >\n                                        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                                            {/* <Menu.Item>\n                                                {({ active }) => (\n                                                    <a\n                                                        href=\"#\"\n                                                        className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                                                    >\n                                                        Settings\n                                                    </a>\n                                                )}\n                                            </Menu.Item> */}\n                                            <Menu.Item>\n                                                {({ active }) => (\n                                                    <a\n                                                        href=\"#\"\n                                                        className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                                                        onClick={onClickLogOut}\n                                                    >\n                                                        로그아웃\n                                                    </a>\n                                                )}\n                                            </Menu.Item>\n                                        </Menu.Items>\n                                    </Transition>\n                                </Menu>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Disclosure.Panel className=\"sm:hidden\">\n                        <div className=\"px-2 pt-2 pb-3 space-y-1\">\n                            {AppConstants.MENU_LIST.map((item) => (\n                                <a\n                                    key={item.name}\n                                    href={item.href}\n                                    className={classNames(\n                                        menu.name === item.name ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white cursor-pointer',\n                                        'block px-3 py-2 rounded-md text-base font-medium cursor-pointer'\n                                    )}\n                                    aria-current={menu.name === item.name ? 'page' : undefined}\n                                >\n                                    {item.name}\n                                </a>\n                            ))}\n                        </div>\n                    </Disclosure.Panel>\n                </>\n            )}\n        </Disclosure>\n    )\n}\n\nexport default TopMenu","import { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/solid'\n\n/*\n    totalCount : 총 데이터 갯수\n    pageNo: 현재 페이지 번호\n    startNo: 페이지 시작 번호\n    pageCount: 스탭별 페이지 카운트\n    totalPageCount: 총 페이지 갯수\n    clickNext: startNo + pageCount\n    clickPrev: startNo - pageCount\n    clickPageNo: 페이지 번호 클릭 이벤트\n*/ \nconst Paging = ({ totalCount, pageNo, startNo, pageCount, totalPageCount, clickNext, clickPrev, clickPageNo }) => {\n\n    function renderPageNumbers() {\n        const pages = [0, 1, 2, 3, 4]\n        return (\n            <>\n                {\n                    pages.map(item => {\n                        const page = startNo + item\n                        return (\n                            page <= totalPageCount &&\n                            <a\n                                href=\"#\"\n                                className=\"bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium\"\n                                key={`paging-${page}`}\n                                onClick={() => clickPageNo(page)}\n                            >\n                                {page}\n                            </a>\n                        )\n                    })\n                }\n                                \n            </>\n        )\n    }\n\n    return (\n        <div className=\"bg-white mt-2 px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\n            <div className=\"flex-1 flex justify-between sm:hidden\">\n                {\n                    startNo > 1 && <a\n                        href=\"#\"\n                        className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                        onClick={clickPrev}\n                    >\n                        Previous\n                    </a>\n                }\n                {\n                    (startNo + pageCount) <= totalPageCount && <a\n                        href=\"#\"\n                        className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                        onClick={clickNext}\n                    >\n                        Next\n                    </a>\n                }\n\n            </div>\n            <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                <div>\n                    <p className=\"text-sm text-gray-700\">\n                        총 <span className=\"font-medium\">{totalCount}</span>\n                    </p>\n                </div>\n                <div>\n                    <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n                        {\n                            startNo > 1 && <a\n                                href=\"#\"\n                                className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\n                                onClick={clickPrev}\n                            >\n                                <span className=\"sr-only\">Previous</span>\n                                <ChevronLeftIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                            </a>\n                        }\n\n                        {/* Current: \"z-10 bg-indigo-50 border-indigo-500 text-indigo-600\", Default: \"bg-white border-gray-300 text-gray-500 hover:bg-gray-50\" */}\n                        {\n                            renderPageNumbers()\n                        }\n                        {\n                            (startNo + pageCount) <= totalPageCount && <a\n                                href=\"#\"\n                                className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\n                                onClick={clickNext}\n                            >\n                                <span className=\"sr-only\">Next</span>\n                                <ChevronRightIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                            </a>\n                        }\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Paging;","\nimport Axios from './Axios';\n\nexport const apiBoardList = async (pageNo, limit, boardType) => Axios.get('/board', {\n    params: {\n        pageNo,\n        limit,\n        boardType\n    }\n})\n\n\nexport const apiBoardTotalCount = async (boardType) => Axios.get('/board/count', {\n    params: {    \n        boardType\n    }\n})\n\nexport const apiEventBoardList = async () => Axios.get('/board/all', {\n    params: {\n        boardType: 2\n    }    \n})\n\n\nexport const apiNotifyBoardList = async () => Axios.get('/board/all', {\n    params: {\n        boardType: 1\n    }\n})\n\nexport const apiDeleteBoard = async (id) => Axios.post('/board/delete', {\n    id\n})\n\nexport const apiCreateEventBoard = async (title, content) => Axios.post('/board/create', {\n    title,\n    content,\n    boardType: '2'\n})\n\nexport const apiCreateNotifyBoard = async (title, content) => Axios.post('/board/create', {\n    title,\n    content,\n    boardType: '1'\n})","import { Fragment, useState, useEffect } from 'react'\nimport { PencilIcon } from '@heroicons/react/solid'\nimport Paging from '../components/Paging'\nimport { toast } from 'react-toastify';\nimport { apiDeleteBoard, apiCreateEventBoard, apiBoardTotalCount, apiBoardList } from '../api/BoardApi';\nimport { getCreatedAt } from '../utils/utils';\nimport { Dialog, Transition } from '@headlessui/react'\n\nconst LIMIT = 5\n\nconst EventPage = () => {\n    \n    const [totalCount, setTotalCount] = useState(0)\n    const [pageNo, setPageNo] = useState(1)\n    const [startNo, setStartNo] = useState(1)\n    const [totalPageCount, setTotalPageCount] = useState(1)\n    let [list, setList] = useState([])\n\n    const [isOpen, setIsOpen] = useState(false)\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n\n    useEffect(() => {\n        getTotalCount()\n    }, [])\n\n    useEffect(() => {\n        if (totalCount > 0) {\n            if (totalCount > LIMIT) {\n                let pCount = totalCount / LIMIT;\n                if (totalCount % LIMIT > 0) {\n                    pCount += 1;\n                }\n                setTotalPageCount(pCount)\n            }\n        }\n\n        getBoardList(pageNo, LIMIT);\n    }, [totalCount])\n\n\n\n    /*\n        API\n    */\n    async function getTotalCount() {\n        try {\n            const result = await apiBoardTotalCount(2);\n\n            console.log(result);\n\n            if (result && result.data) {\n                const { ok, count } = result.data;\n                if (ok) {\n                    setTotalCount(Number(count));\n                }\n            }\n        } catch (err) {\n            console.log(err)\n            toast.error(err);\n        }\n\n    }\n\n    async function getBoardList(pageNo, limit) {\n        try {\n            const result = await apiBoardList(pageNo, limit, 2);\n        \n            if (result && result.data) {\n                const { ok, list } = result.data;\n                if (ok) {\n                    setList(list);\n                }\n            }\n        } catch (err) {\n            console.log(err)\n            toast.error(err);\n        }\n    }\n\n\n    async function deleteBoard(board) {\n        try {\n            const result = await apiDeleteBoard(board.id)            \n\n            if (result && result.data) {\n                const { ok } = result.data;\n                return ok;\n            }\n        } catch (err) {\n            toast.error(err);\n            return false\n        }\n    }\n\n    async function createBoard(title, content) {\n        try {\n            const result = await apiCreateEventBoard(title, content)        \n\n            if (result && result.data) {\n                const { ok, id } = result.data;\n                if (ok) {\n                    const board = {\n                        id,\n                        title,\n                        content,\n                        viewCount: 0,\n                        createdAt: new Date()\n                    }\n                    const newList = [board, ...list]\n                    setList(newList)            \n                    toast.info(\"글작석 완료!\")        \n                } else {\n                    toast.error(\"글쓰기 실패!\")\n                }                \n            }\n        } catch (err) {\n            toast.error(err);            \n        }\n    }\n\n\n    /*\n        Event Handler\n    */\n    async function onClickDelete(item) {        \n        const index = list.findIndex(board => board.id === item.id)\n        if (index >= 0) {\n            if (window.confirm(\"삭제 하시겠습니까?\")) {\n                const result = await deleteBoard(item);\n                if (result) {                    \n                    getBoardList(pageNo, LIMIT);\n                    toast.info(\"삭제 완료\")\n                } else {\n                    toast.error(\"삭제 실패\")\n                }\n\n            }\n        }\n    }\n\n    function closeModal() {\n        setIsOpen(false)\n        setTitle('')\n        setContent('')\n    }\n\n    function openModal() {\n        setIsOpen(true)\n    }\n\n    async function writeBoard() {\n        if (!title) {\n            return\n        }\n\n        if (!content) {\n            return\n        }    \n        await createBoard(title, content)\n        closeModal()\n    }\n    \n\n    function onChangeTitle(e) {\n        e.preventDefault()\n        setTitle(e.target.value)\n    }\n\n    function onChangeContent(e) {\n        e.preventDefault()\n        setContent(e.target.value)\n    }\n\n    function onClickNext() {\n        const newStartPageNo = startNo + 5\n        if (newStartPageNo <= totalPageCount) {\n            setStartNo(newStartPageNo)\n            setPageNo(newStartPageNo)\n            getBoardList(newStartPageNo, LIMIT);\n        }\n    }\n\n    function onClickPrev() {\n        const newStartPageNo = startNo - 5\n        if (newStartPageNo >= 1) {\n            setStartNo(newStartPageNo)\n            setPageNo(newStartPageNo)\n            getBoardList(newStartPageNo, LIMIT);\n        }\n    }\n\n    function onClickPageNo(page) {\n        if (pageNo === page) return\n        setPageNo(page)\n        getBoardList(page, LIMIT);\n    }\n\n    return (\n        <>\n            <div className=\"max-w-7xl mx-auto px-1 sm:px-5 lg:px-6\">\n                {/* TOP START*/}\n                <div className=\"flex flex-row-reverse py-5 items-center\">\n                    <span className=\"sm:ml-3\">\n                        <button\n                            type=\"button\"\n                            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                            onClick={openModal}\n                        >\n                            <PencilIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n                            글쓰기\n                        </button>\n                    </span>\n                </div>\n                {/* TOP END */}\n\n                {/* TABLE START */}\n                <div className=\"flex flex-col\">\n                    <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                                <table className=\"min-w-full divide-y divide-gray-200\">\n                                    <thead className=\"bg-gray-50\">\n                                        <tr>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                제목\n                                            </th>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                내용\n                                            </th>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                조회수\n                                            </th>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                날짜\n                                            </th>\n                                            <th scope=\"col\" className=\"relative px-2 py-3\">\n                                                <span className=\"sr-only\">Edit</span>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                                        {list.map((item) => (\n                                            <tr key={item.id}>\n                                                <td className=\"px-2 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                                    {item.title}\n                                                </td>\n                                                <td className=\"px-2 py-4 wrap text-sm text-gray-900\">\n                                                    {item.content}\n                                                </td>\n                                                <td className=\"px-2 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                                    {item.viewCount}\n                                                </td>\n                                                <td className=\"px-2 py-4 whitespace-nowrap text-sm text-gray-900\">{getCreatedAt(item.createdAt)}</td>\n                                                <td className=\"px-2 py-4 whitespace-nowrap text-center text-sm font-medium\">\n                                                    <a href=\"#\" className=\"text-red-600 hover:text-indigo-900\" onClick={() => onClickDelete(item)}>\n                                                        삭제\n                                                    </a>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>   \n                    <Paging\n                        totalCount={totalCount}\n                        pageNo={pageNo}\n                        startNo={startNo}\n                        pageCount={5}\n                        totalPageCount={totalPageCount}\n                        clickNext={onClickNext}\n                        clickPrev={onClickPrev}\n                        clickPageNo={onClickPageNo} />\n                </div>\n                {/* TABLE END */}\n            </div>\n            <Transition appear show={isOpen} as={Fragment}>\n                <Dialog\n                    as=\"div\"\n                    className=\"fixed inset-0 z-10 overflow-y-auto\"\n                    onClose={closeModal}\n                >         \n                    <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\" />\n                    <div className=\"min-h-screen px-4 text-center\">\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0\"\n                            enterTo=\"opacity-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100\"\n                            leaveTo=\"opacity-0\"\n                        >\n                            <Dialog.Overlay className=\"fixed inset-0\" />\n                        </Transition.Child>\n\n                        {/* This element is to trick the browser into centering the modal contents. */}\n                        <span\n                            className=\"inline-block h-screen align-middle\"\n                            aria-hidden=\"true\"\n                        >\n                            &#8203;\n                        </span>\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0 scale-95\"\n                            enterTo=\"opacity-100 scale-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100 scale-100\"\n                            leaveTo=\"opacity-0 scale-95\"\n                        >\n                            <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\n                                <Dialog.Title\n                                    as=\"h3\"\n                                    className=\"text-lg font-medium leading-6 text-gray-900\"\n                                >\n                                    이벤트 글작성\n                                </Dialog.Title>\n                                <div className=\"mt-2\">\n                                    <input\n                                        id=\"about\"\n                                        name=\"about\"                                        \n                                        type=\"text\"\n                                        className=\"shadow-sm px-2 py-2 focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                        placeholder=\"제목\"\n                                        value={title}\n                                        onChange={onChangeTitle}\n                                    />\n                                </div>\n\n                                <div className=\"mt-2\">\n                                    <textarea\n                                        id=\"content\"\n                                        name=\"content\"\n                                        rows={10}\n                                        className=\"shadow-sm px-2 py-2 focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                        placeholder=\"내용\"\n                                        value={content}\n                                        onChange={onChangeContent}\n                                    />\n                                </div>\n\n                                <div className=\"flex mt-4 justify-end\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"mr-2 inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-red-400 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-red-500\"\n                                        onClick={closeModal}\n                                    >\n                                        취소\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-300 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                                        onClick={writeBoard}\n                                    >\n                                        완료\n                                    </button>\n                                </div>\n                            </div>\n                        </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition>\n        </>\n\n    )\n}\n\nexport default EventPage;","import { Fragment, useState, useEffect } from 'react'\nimport { PencilIcon } from '@heroicons/react/solid'\nimport Paging from '../components/Paging'\nimport { toast } from 'react-toastify';\nimport { apiDeleteBoard, apiCreateNotifyBoard, apiBoardTotalCount, apiBoardList } from '../api/BoardApi';\nimport { getCreatedAt } from '../utils/utils';\nimport { Dialog, Transition } from '@headlessui/react'\n\nconst LIMIT = 5\n\nconst NotifyPage = () => {\n\n    const [totalCount, setTotalCount] = useState(0)\n    const [pageNo, setPageNo] = useState(1)\n    const [startNo, setStartNo] = useState(1)\n    const [totalPageCount, setTotalPageCount] = useState(1)\n    let [list, setList] = useState([])\n\n    const [isOpen, setIsOpen] = useState(false)\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n\n    useEffect(() => {\n        getTotalCount()\n    }, [])\n\n    useEffect(() => {\n        if (totalCount > 0) {\n            if (totalCount > LIMIT) {\n                let pCount = totalCount / LIMIT;\n                if (totalCount % LIMIT > 0) {\n                    pCount += 1;\n                }\n                setTotalPageCount(pCount)\n            }\n        }\n\n        getBoardList(pageNo, LIMIT);\n    }, [totalCount])\n\n\n\n    /*\n        API\n    */\n    async function getTotalCount() {\n        try {\n            const result = await apiBoardTotalCount(1);\n\n            console.log(result);\n\n            if (result && result.data) {\n                const { ok, count } = result.data;\n                if (ok) {\n                    setTotalCount(Number(count));\n                }\n            }\n        } catch (err) {\n            console.log(err)\n            toast.error(err);\n        }\n\n    }\n\n    async function getBoardList(pageNo, limit) {\n        try {\n            const result = await apiBoardList(pageNo, limit, 1);\n\n            if (result && result.data) {\n                const { ok, list } = result.data;\n                if (ok) {\n                    setList(list);\n                }\n            }\n        } catch (err) {\n            console.log(err)\n            toast.error(err);\n        }\n    }\n\n\n    async function deleteBoard(board) {\n        try {\n            const result = await apiDeleteBoard(board.id)\n\n            if (result && result.data) {\n                const { ok } = result.data;\n                return ok;\n            }\n        } catch (err) {\n            toast.error(err);\n            return false\n        }\n    }\n\n    async function createBoard(title, content) {\n        try {\n            const result = await apiCreateNotifyBoard(title, content)\n\n            if (result && result.data) {\n                const { ok, id } = result.data;\n                if (ok) {\n                    const board = {\n                        id,\n                        title,\n                        content,\n                        viewCount: 0,\n                        createdAt: new Date()\n                    }\n                    const newList = [board, ...list]\n                    setList(newList)\n                    toast.info(\"글작석 완료!\")\n                } else {\n                    toast.error(\"글쓰기 실패!\")\n                }\n            }\n        } catch (err) {\n            toast.error(err);\n        }\n    }\n\n\n    /*\n        Event Handler\n    */\n    async function onClickDelete(item) {\n        const index = list.findIndex(board => board.id === item.id)\n        if (index >= 0) {\n            if (window.confirm(\"삭제 하시겠습니까?\")) {\n                const result = await deleteBoard(item);\n                if (result) {\n                    getBoardList(pageNo, LIMIT);\n                    toast.info(\"삭제 완료\")\n                } else {\n                    toast.error(\"삭제 실패\")\n                }\n\n            }\n        }\n    }\n\n    function closeModal() {\n        setIsOpen(false)\n        setTitle('')\n        setContent('')\n    }\n\n    function openModal() {\n        setIsOpen(true)\n    }\n\n    async function writeBoard() {\n        if (!title) {\n            return\n        }\n\n        if (!content) {\n            return\n        }\n        await createBoard(title, content)\n        closeModal()\n    }\n\n\n    function onChangeTitle(e) {\n        e.preventDefault()\n        setTitle(e.target.value)\n    }\n\n    function onChangeContent(e) {\n        e.preventDefault()\n        setContent(e.target.value)\n    }\n\n    function onClickNext() {\n        const newStartPageNo = startNo + 5\n        if (newStartPageNo <= totalPageCount) {\n            setStartNo(newStartPageNo)\n            setPageNo(newStartPageNo)\n            getBoardList(newStartPageNo, LIMIT);\n        }\n    }\n\n    function onClickPrev() {\n        const newStartPageNo = startNo - 5\n        if (newStartPageNo >= 1) {\n            setStartNo(newStartPageNo)\n            setPageNo(newStartPageNo)\n            getBoardList(newStartPageNo, LIMIT);\n        }\n    }\n\n    function onClickPageNo(page) {\n        if (pageNo === page) return\n        setPageNo(page)\n        getBoardList(page, LIMIT);\n    }\n\n    return (\n        <>\n            <div className=\"max-w-7xl mx-auto px-1 sm:px-5 lg:px-6\">\n                {/* TOP START*/}\n                <div className=\"flex flex-row-reverse py-5 items-center\">\n                    <span className=\"sm:ml-3\">\n                        <button\n                            type=\"button\"\n                            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                            onClick={openModal}\n                        >\n                            <PencilIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n                            글쓰기\n                        </button>\n                    </span>\n                </div>\n                {/* TOP END */}\n\n                {/* TABLE START */}\n                <div className=\"flex flex-col\">\n                    <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                                <table className=\"min-w-full divide-y divide-gray-200\">\n                                    <thead className=\"bg-gray-50\">\n                                        <tr>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                제목\n                                            </th>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                내용\n                                            </th>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                조회수\n                                            </th>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                날짜\n                                            </th>\n                                            <th scope=\"col\" className=\"relative px-2 py-3\">\n                                                <span className=\"sr-only\">Edit</span>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                                        {list.map((item) => (\n                                            <tr key={item.id}>\n                                                <td className=\"px-2 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                                    {item.title}\n                                                </td>\n                                                <td className=\"px-2 py-4 wrap text-sm text-gray-900\">\n                                                    {item.content}\n                                                </td>\n                                                <td className=\"px-2 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                                    {item.viewCount}\n                                                </td>\n                                                <td className=\"px-2 py-4 whitespace-nowrap text-sm text-gray-900\">{getCreatedAt(item.createdAt)}</td>\n                                                <td className=\"px-2 py-4 whitespace-nowrap text-center text-sm font-medium\">\n                                                    <a href=\"#\" className=\"text-red-600 hover:text-indigo-900\" onClick={() => onClickDelete(item)}>\n                                                        삭제\n                                                    </a>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    <Paging\n                        totalCount={totalCount}\n                        pageNo={pageNo}\n                        startNo={startNo}\n                        pageCount={5}\n                        totalPageCount={totalPageCount}\n                        clickNext={onClickNext}\n                        clickPrev={onClickPrev}\n                        clickPageNo={onClickPageNo} />\n                </div>\n                {/* TABLE END */}\n            </div>\n            <Transition appear show={isOpen} as={Fragment}>\n                <Dialog\n                    as=\"div\"\n                    className=\"fixed inset-0 z-10 overflow-y-auto\"\n                    onClose={closeModal}\n                >\n                    <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\" />\n                    <div className=\"min-h-screen px-4 text-center\">\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0\"\n                            enterTo=\"opacity-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100\"\n                            leaveTo=\"opacity-0\"\n                        >\n                            <Dialog.Overlay className=\"fixed inset-0\" />\n                        </Transition.Child>\n\n                        {/* This element is to trick the browser into centering the modal contents. */}\n                        <span\n                            className=\"inline-block h-screen align-middle\"\n                            aria-hidden=\"true\"\n                        >\n                            &#8203;\n                        </span>\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0 scale-95\"\n                            enterTo=\"opacity-100 scale-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100 scale-100\"\n                            leaveTo=\"opacity-0 scale-95\"\n                        >\n                            <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\n                                <Dialog.Title\n                                    as=\"h3\"\n                                    className=\"text-lg font-medium leading-6 text-gray-900\"\n                                >\n                                    공지글 글작성\n                                </Dialog.Title>\n                                <div className=\"mt-2\">\n                                    <input\n                                        id=\"about\"\n                                        name=\"about\"\n                                        type=\"text\"\n                                        className=\"shadow-sm px-2 py-2 focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                        placeholder=\"제목\"\n                                        value={title}\n                                        onChange={onChangeTitle}\n                                    />\n                                </div>\n\n                                <div className=\"mt-2\">\n                                    <textarea\n                                        id=\"content\"\n                                        name=\"content\"\n                                        rows={10}\n                                        className=\"shadow-sm px-2 py-2 focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                        placeholder=\"내용\"\n                                        value={content}\n                                        onChange={onChangeContent}\n                                    />\n                                </div>\n\n                                <div className=\"flex mt-4 justify-end\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"mr-2 inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-red-400 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-red-500\"\n                                        onClick={closeModal}\n                                    >\n                                        취소\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-300 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                                        onClick={writeBoard}\n                                    >\n                                        완료\n                                    </button>\n                                </div>\n                            </div>\n                        </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition>\n        </>\n\n    )\n}\n\nexport default NotifyPage;","\nimport Axios from './Axios';\n\n// const UserApi = {\n//     userTotalCount: () => Axios.get('/user/count'),\n//     userList: ({ pageNo, limit }) => Axios.get(`/user/list/${pageNo}/${limit}`)\n// }\n\n\nexport const apiUserTotalCount = async () => Axios.get('/user/count')\nexport const apiUserList = async ({ pageNo, limit }) => Axios.get(`/user/list`, {\n    params: {\n        pageNo,\n        limit\n    }\n})\n\nexport const apiSearchUser = async ({ keyword }) => Axios.get('/user/search', {\n    params: {\n        keyword    \n    }\n})\n\nexport const apiUserDeny = async (userId) => Axios.post('/user/deny', {\n    userId\n})\n\nexport const apiUserAdmit = async (userId) => Axios.post('/user/admit', {\n    userId\n})\n\nexport const apiUserPointHistory = async (userId, pageNo, limit) => Axios.get('/user/point/history', {\n    params: {\n        userId,\n        pageNo,\n        limit\n    }\n})\n\nexport const apiUserPointHistoryTotalCount = async (userId) => Axios.get('/user/point/history/count', {\n    params: {\n        userId\n    }\n})\n\nexport const apiUserCouponHistory = async (userId) => Axios.get('/user/coupon/history', {\n    params: {\n        userId\n    }\n})\n\nexport const apiUserConnectionCount = async () => Axios.get('/user/stats/connection')\nexport const apiTotalRewardToday = async () => Axios.get('/user/stats/today/reward')\n\nexport const apiPhoneVerify = async (userId, phoneNo) => Axios.post('/user/phone/verify', {\n    userId,\n    phoneNo: `${phoneNo}`\n})","\nimport Axios from './Axios';\n\nexport const apiSendPointMessage = async (userId, point, description) => Axios.post('/message/send/point', {\n    userId,\n    point,\n    description\n})\n\nexport const apiSendNormalMessage = async (userId, description) => Axios.post('/message/send/normal', {\n    userId,\n    description\n})","import { Fragment, useState, useEffect } from 'react';\nimport { SearchIcon } from '@heroicons/react/solid'\nimport Paging from '../components/Paging';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom'\nimport { apiUserTotalCount, apiUserList, apiSearchUser, apiUserDeny, apiUserAdmit, apiPhoneVerify } from '../api/UserApi';\nimport { toast } from 'react-toastify';\nimport { Switch } from '@headlessui/react';\nimport { getCreatedAt } from '../utils/utils';\nimport { Dialog, Transition } from '@headlessui/react'\nimport { apiSendPointMessage } from '../api/MessageApi';\n\nconst LIMIT = 15;\n\nconst UserPage = withRouter((props) => {\n    const [totalCount, setTotalCount] = useState(0)\n    const [pageNo, setPageNo] = useState(1)\n    const [startNo, setStartNo] = useState(1)\n    const [totalPageCount, setTotalPageCount] = useState(1)\n    let [list, setList] = useState([])\n\n    const [prevState, setPrevState] = useState()\n    const [keyword, setKeyword] = useState(\"\")\n\n\n    const [isOpen, setIsOpen] = useState(false)\n    const [point, setPoint] = useState(0)\n    const [description, setDescription] = useState('')\n    const [selUser, setSelUser] = useState()\n\n    const [isOpenPhone, setIsOpenPhone] = useState(false)\n    const [phoneNo, setPhoneNo] = useState('')\n\n\n    useEffect(() => {\n        getTotalCount()\n        getUserList(pageNo, LIMIT);\n    }, [])\n\n\n    /*\n        State\n    */\n    function restorePrevState() {\n        if (prevState) {            \n            setTotalCount(prevState.totalCount);\n            setPageNo(prevState.pageNo);\n            setStartNo(prevState.startNo);\n            setTotalPageCount(prevState.totalPageCount);\n            setList(prevState.list);        \n        }\n    }\n\n    /*\n        API\n    */\n    async function getTotalCount() {\n        try {\n            const result = await apiUserTotalCount();\n\n            console.log(result);\n\n            if (result && result.data) {\n                const { ok, count } = result.data;\n                if (ok) {\n                    setTotalCount(count);\n                    if (count > 0) {\n                        if (count > LIMIT) {\n                            let pCount = count / LIMIT;\n                            if (count % LIMIT > 0) {\n                                pCount += 1;\n                            }\n                            setTotalPageCount(pCount)\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            console.log(err)\n            toast.error(err);\n        }\n\n    }\n\n    async function getUserList(pageNo, limit) {\n        try {\n            const result = await apiUserList({ pageNo, limit });\n            console.log(result);\n            if (result && result.data) {\n                const { ok, list } = result.data;\n                if (ok) {\n                    setList(list);\n                }\n            }\n        } catch (err) {\n            console.log(err)\n            toast.error(err);\n        }\n    }\n\n    async function searchUser() {\n        if (!keyword) return\n\n        setPrevState({\n            totalCount,\n            pageNo,\n            startNo,\n            totalPageCount,\n            list\n        });\n\n        try {\n            const result = await apiSearchUser({ keyword });\n            console.log(result)\n            if (result && result.data) {\n                const { ok, list } = result.data;\n                console.log(list)\n                if (ok) {                \n                    const count = list.length    \n                    console.log(count)                \n                    if (count > 0) {                        \n                        setTotalCount(count);\n                        if (count > 0) {\n                            if (count > LIMIT) {\n                                let pCount = count / LIMIT;\n                                if (count % LIMIT > 0) {\n                                    pCount += 1;\n                                }\n                                setTotalPageCount(pCount)\n                            }\n                        }\n                        setPageNo(1)\n                        setStartNo(1)\n                        setList(list)\n                        \n                        \n                        toast.info(`${count}명을 찾았습니다.`)\n                    } else {\n                        toast.info(\"사용자를 찾을수 없습니다.\")\n                    }\n                }\n            }\n        } catch (err) {\n            toast.error(err)\n        }\n    }\n\n\n    async function denyUser(user) {\n        try {\n            const result = await apiUserDeny(user.id);\n            console.log(result)\n            if (result && result.data) {\n                const { ok } = result.data;\n                if (ok) {\n                    toast.info(`${user.nick}님을 차단 했습니다.`)\n                    return true\n                } else {\n                    toast.info(\"요청 실패.\")\n                    return false\n                }\n            }\n        } catch (err) {\n            toast.error(err)\n            return false\n        }\n    }\n\n    async function admitUser(user) {\n        try {\n            const result = await apiUserAdmit(user.id);\n            console.log(result)\n            if (result && result.data) {\n                const { ok } = result.data;\n                if (ok) {\n                    toast.info(`${user.nick}님을 활성화 했습니다.`)\n                    return true\n                } else {\n                    toast.info(\"요청 실패.\")\n                    return false\n                }\n            }\n        } catch (err) {\n            toast.error(err)\n            return false\n        }\n    }\n\n\n    async function sendPoint(user, point, description) {\n        if (!user) return\n        try {\n            const result = await apiSendPointMessage(user.id, point, description);\n            if (result && result.data) {\n                const { ok } = result.data;\n                if (ok) {\n                    toast.info(\"보관함으로 전송 하였습니다.\")\n                } else {\n                    toast.warn(\"요청 실패.\")\n                }\n            }\n        } catch (err) {\n            toast.error(\"요청 실패.\")\n        }\n    }\n\n    async function verifyUserPhoneNo(user, phoneNo) {\n        if (!user) return\n        try {\n            const result = await apiPhoneVerify(user.id, phoneNo);\n            if (result && result.data) {\n                const { ok, error } = result.data;\n                if (ok) {\n                    const index = list.findIndex(item => item.id === user.id)\n                    if (index >= 0) {\n                        const newList = [...list]\n                        newList[index].count = 1\n                        setList(newList)\n                    }\n                    toast.info(\"인증 완료\")\n                } else {\n                    toast.error(error)\n                }\n            }\n        } catch (err) {\n            toast.error(\"요청 실패.\")\n        }\n    }\n\n    /*\n        Rendering\n    */\n    function getGenderText(gender) {\n        switch (gender) {\n            case 0:\n                return \"N/A\"\n            case 1:\n                return \"남성\"\n            case 2:\n                return \"여성\"\n        }\n    }\n\n\n\n\n\n    /*\n    \n        Event Listener\n    */\n\n    function onChangeKeyword(e) {\n        e.preventDefault();\n        const value = e.target.value;\n        if (value === '') {\n            restorePrevState();\n        }\n\n        setKeyword(e.target.value);\n    }\n\n\n    function onClickNext() {\n        const newStartPageNo = startNo + 5\n        if (newStartPageNo <= totalPageCount) {\n            setStartNo(newStartPageNo)\n            setPageNo(newStartPageNo)\n            getUserList(newStartPageNo, LIMIT);\n        }\n    }\n\n    function onClickPrev() {\n        const newStartPageNo = startNo - 5\n        if (newStartPageNo >= 1) {\n            setStartNo(newStartPageNo)\n            setPageNo(newStartPageNo)\n            getUserList(newStartPageNo, LIMIT);\n        }\n    }\n\n    function onClickPageNo(page) {\n        if (pageNo === page) return\n        setPageNo(page)\n        getUserList(page, LIMIT);\n    }\n\n    async function onChangeStatus(user) {\n        const index = list.findIndex(item => item.id === user.id)\n\n        if (index >= 0) {\n            if (window.confirm(`${user.nick}님의 상태를 변경 하시겠습니까?`)) {\n\n                const newList = [...list]\n                const status = user.status == 1 ? 2 : 1\n\n                if (status == 1) {\n                    const result = await admitUser(user);\n                    if (result) {\n                        newList[index].status = status\n                        setList(newList)\n                    }\n                } else {\n                    const result = await denyUser(user);\n                    if (result) {\n                        newList[index].status = status\n                        setList(newList)\n                    }\n                }\n            }\n        }\n    }\n\n\n    function closeModal() {\n        setIsOpen(false)\n        setPoint(0)\n        setDescription('')\n        setSelUser(undefined)\n    }\n\n    function closePhoneModal() {\n        setIsOpenPhone(false)\n        setPhoneNo(0)        \n        setSelUser(undefined)\n    }\n\n    function openModal() {            \n        setIsOpen(true)               \n    }\n\n    function openPhoneModal() {\n        setIsOpenPhone(true)\n    }\n\n    async function writeBoard() {\n        \n        if (!point) {\n            return\n        }\n\n        let numPoint = 0\n        try {\n            numPoint = Number(point)\n        } catch (e) {\n            toast.error(\"포인트를 확인하세요.\")\n            return\n        }\n\n        if (numPoint < 0) {\n            toast.error(\"포인트를 확인하세요.\")\n            return\n        }\n\n        if (!description) {\n            return\n        }\n\n        if (window.confirm(\"포인트를 지급하시겠습니까?\")) {\n            await sendPoint(selUser, numPoint, description)\n            closeModal()\n        }        \n    }\n\n    async function verifyPhoneNo() {\n\n        if (!selUser) {\n            return\n        }\n\n        if (!phoneNo) {\n            return\n        }        \n\n        if (window.confirm(\"휴대폰 번호가 맞나요?\")) {\n            await verifyUserPhoneNo(selUser, phoneNo)\n            closePhoneModal()\n        }\n    }\n\n\n    function onChangePoint(e) {\n        e.preventDefault()\n        setPoint(e.target.value)\n    }\n\n    function onChangeDescription(e) {\n        e.preventDefault()\n        setDescription(e.target.value)\n    }\n\n    function onChangePhoneNo(e) {\n        e.preventDefault()\n        setPhoneNo(e.target.value)\n    }\n\n\n    return (\n        <>\n            <div className=\"max-w-7xl mx-auto px-1 sm:px-5 lg:px-6\">\n                {/* TOP START*/}\n                <div className=\"flex flex-row-reverse py-5 items-center\">\n                    <span className=\"sm:ml-3\">\n                        <button\n                            type=\"button\"\n                            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                            onClick={searchUser}\n                        >\n                            <SearchIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n                            검색\n                        </button>\n                    </span>\n                    <input\n                        id=\"search-user\"\n                        name=\"search-user\"\n                        type=\"text\"\n                        value={keyword}\n                        onChange={onChangeKeyword}\n                        className=\"mt-2 mb-1 w-1/5 py-3 px-3 focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border border-gray-500 rounded-md\"\n                        placeholder=\"닉네임으로 검색\"\n                    />\n\n                </div>\n                {/* TOP END */}\n\n                {/* TABLE START */}\n                <div className=\"flex flex-col\">\n                    <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                                <table className=\"min-w-full divide-y divide-gray-200\">\n                                    <thead className=\"bg-gray-50\">\n                                        <tr>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                닉네임(이메일)\n                                            </th>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                상태\n                                            </th>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                성별(출생년도)\n                                            </th>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                포인트(누적)\n                                            </th>\n\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                쿠폰\n                                            </th>\n                                            <th\n                                                scope=\"col\"\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                            >\n                                                가입일\n                                            </th>\n                                            <th scope=\"col\" className=\"relative px-4 py-3\">\n                                                <span className=\"sr-only\">Edit</span>\n                                            </th>\n                                            <th scope=\"col\" className=\"relative px-4 py-3\">\n                                                <span className=\"sr-only\">Edit</span>\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                                        {list.map((person) => (\n                                            <tr key={person.email} className=\"hover:bg-gray-200 cursor-pointer\">\n                                                <td className=\"px-1 py-2 whitespace-nowrap\">\n                                                    <div className=\"ml-4\">\n                                                        <div className=\"text-sm font-medium text-gray-900\">{person.nick}</div>\n                                                        <div className=\"text-sm text-gray-900\">{person.uid}</div>\n                                                    </div>\n                                                </td>\n                                                <td className=\"px-6 py-2 whitespace-nowrap\">\n                                                    {\n                                                        person.status === 3 ? <div className=\"text-sm text-gray-600\">탈퇴</div> :\n                                                            <Switch\n                                                                checked={person.status == 1}\n                                                                onChange={() => onChangeStatus(person)}\n                                                                className={`${person.status == 1 ? 'bg-blue-600' : 'bg-gray-500'} relative inline-flex items-center h-6 rounded-full w-11`}\n                                                            >\n                                                                <span className=\"sr-only\">change status</span>\n                                                                <span\n                                                                    className={`${person.status == 1 ? 'translate-x-6' : 'translate-x-1'} inline-block w-4 h-4 transform bg-white rounded-full`}\n                                                                />\n                                                            </Switch>\n                                                    }\n\n                                                </td>\n                                                <td className=\"px-6 py-2 whitespace-nowrap\">\n                                                    <div className=\"text-sm text-gray-900\">{getGenderText(person.gender)} / {person.birth === 0 ? 'N/A' : person.birth}</div>\n                                                </td>\n\n                                                <td className=\"px-6 py-2 whitespace-nowrap text-sm text-gray-900\">\n                                                    <div className=\"ml-2\">\n                                                        <div className=\"text-sm font-medium text-gray-900\">{`${person.point} / ${person.accPoint}`}</div>\n                                                        <div className=\"text-sm\">\n                                                            <Link className=\"text-indigo-600 hover:text-indigo-900\" to={`/user/point/${person.id}`}>내역보기</Link>\n\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td className=\"px-6 py-2 whitespace-nowrap text-sm text-gray-900\">\n                                                    <Link className=\"text-indigo-600 hover:text-indigo-900\" to={`/user/coupon/${person.id}`}>내역보기</Link>\n                                                </td>\n                                                <td className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-900\">\n                                                    {getCreatedAt(person.createdAt)}\n                                                </td>\n                                                <td className=\"px-4 py-2 whitespace-nowrap text-right text-sm font-medium\">\n                                                    <a href=\"#\" className=\"text-green-600 hover:text-indigo-900\" onClick={(e) => {\n                                                        e.preventDefault()\n                                                        setSelUser(person)\n                                                        openModal()\n                                                    }}>\n                                                        포인트 지급\n                                                    </a>\n                                                </td>\n                                                <td className=\"px-4 py-2 whitespace-nowrap text-right text-sm font-medium\">\n                                                    {\n                                                        person.count <= 0 && <a href=\"#\" className=\"text-green-600 hover:text-indigo-900\" onClick={(e) => {\n                                                            e.preventDefault()\n                                                            setSelUser(person)\n                                                            openPhoneModal()\n                                                        }}>\n                                                            폰인증\n                                                        </a>\n                                                    }\n                                                    \n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Paging\n                        totalCount={totalCount}\n                        pageNo={pageNo}\n                        startNo={startNo}\n                        pageCount={5}\n                        totalPageCount={totalPageCount}\n                        clickNext={onClickNext}\n                        clickPrev={onClickPrev}\n                        clickPageNo={onClickPageNo} />\n\n\n                </div>\n                {/* TABLE END */}\n\n            </div>\n            <Transition appear show={isOpen} as={Fragment}>\n                <Dialog\n                    as=\"div\"\n                    className=\"fixed inset-0 z-10 overflow-y-auto\"\n                    onClose={closeModal}\n                >\n                    <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\" />\n                    <div className=\"min-h-screen px-4 text-center\">\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0\"\n                            enterTo=\"opacity-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100\"\n                            leaveTo=\"opacity-0\"\n                        >\n                            <Dialog.Overlay className=\"fixed inset-0\" />\n                        </Transition.Child>\n\n                        {/* This element is to trick the browser into centering the modal contents. */}\n                        <span\n                            className=\"inline-block h-screen align-middle\"\n                            aria-hidden=\"true\"\n                        >\n                            &#8203;\n                        </span>\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0 scale-95\"\n                            enterTo=\"opacity-100 scale-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100 scale-100\"\n                            leaveTo=\"opacity-0 scale-95\"\n                        >\n                            <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\n                                <Dialog.Title\n                                    as=\"h3\"\n                                    className=\"text-lg font-medium leading-6 text-gray-900\"\n                                >\n                                    포인트 지급\n                                </Dialog.Title>\n                                <div className=\"mt-2\">\n                                    <input\n                                        id=\"point\"\n                                        name=\"point\"\n                                        type=\"number\"\n                                        className=\"shadow-sm px-2 py-2 focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                        placeholder=\"포인트\"\n                                        value={point}\n                                        onChange={onChangePoint}\n                                    />\n                                </div>\n\n                                <div className=\"mt-2\">\n                                    <input\n                                        id=\"description\"\n                                        name=\"description\"\n                                        type=\"text\"\n                                        className=\"shadow-sm px-2 py-2 focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                        placeholder=\"메세지\"\n                                        value={description}\n                                        onChange={onChangeDescription}\n                                    />\n                                </div>\n\n                                <div className=\"flex mt-4 justify-end\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"mr-2 inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-red-400 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-red-500\"\n                                        onClick={closeModal}\n                                    >\n                                        취소\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-300 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                                        onClick={writeBoard}\n                                    >\n                                        완료\n                                    </button>\n                                </div>\n                            </div>\n                        </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition>\n            \n            <Transition appear show={isOpenPhone} as={Fragment}>\n                <Dialog\n                    as=\"div\"\n                    className=\"fixed inset-0 z-10 overflow-y-auto\"\n                    onClose={closeModal}\n                >\n                    <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\" />\n                    <div className=\"min-h-screen px-4 text-center\">\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0\"\n                            enterTo=\"opacity-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100\"\n                            leaveTo=\"opacity-0\"\n                        >\n                            <Dialog.Overlay className=\"fixed inset-0\" />\n                        </Transition.Child>\n\n                        {/* This element is to trick the browser into centering the modal contents. */}\n                        <span\n                            className=\"inline-block h-screen align-middle\"\n                            aria-hidden=\"true\"\n                        >\n                            &#8203;\n                        </span>\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0 scale-95\"\n                            enterTo=\"opacity-100 scale-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100 scale-100\"\n                            leaveTo=\"opacity-0 scale-95\"\n                        >\n                            <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\n                                <Dialog.Title\n                                    as=\"h3\"\n                                    className=\"text-lg font-medium leading-6 text-gray-900\"\n                                >\n                                    휴대폰 인증\n                                </Dialog.Title>\n                                <div className=\"mt-2\">\n                                    <input\n                                        id=\"point\"\n                                        name=\"point\"\n                                        type=\"number\"\n                                        className=\"shadow-sm px-2 py-2 focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                        placeholder=\"휴대폰 번호\"\n                                        value={phoneNo}\n                                        onChange={onChangePhoneNo}\n                                    />\n                                </div>\n\n                                <div className=\"flex mt-4 justify-end\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"mr-2 inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-red-400 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-red-500\"\n                                        onClick={closePhoneModal}\n                                    >\n                                        취소\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-300 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                                        onClick={verifyPhoneNo}\n                                    >\n                                        완료\n                                    </button>\n                                </div>\n                            </div>\n                        </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition>\n        </>\n\n    )\n})\n\nexport default UserPage;","import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { apiUserConnectionCount, apiTotalRewardToday } from '../api/UserApi'\n\nconst StatsPage = () => {\n    const [connectionCount, setConnectionCount] = useState(0)\n    const [list, setRewardList] = useState([])\n\n    useEffect(() => {\n        getUserConnectionCount()        \n    }, [])\n\n    async function getUserConnectionCount() {\n        try {\n            const result = await apiUserConnectionCount()\n            console.log(result)\n            if (result && result.data) {\n                const { ok, count } = result.data\n                if (ok) {\n                    setConnectionCount(count)\n                    await getTotalRewardToday()\n                }\n            }\n        } catch (e) {\n            toast.error(e)\n        }\n    }\n\n    async function getTotalRewardToday() {\n        try {\n            \n            const result = await apiTotalRewardToday()\n            console.log(result)\n            if (result && result.data) {\n                const { ok, list } = result.data\n                if (ok) {\n                    console.log(list)\n                    setRewardList(list)\n                }\n            }\n        } catch (e) {\n            toast.error(e)\n        }\n    }\n\n    return (\n        <div className=\"max-w-7xl mx-auto mt-4 px-1 sm:px-5 lg:px-6\">\n            <div className=\"flex flex-row items-center\">\n                <div className=\"font-medium mr-6 text-gray-900\">어제부터 현재까지 접속자 :</div>\n                <div className=\"font-medium text-2xl text-gray-600\">{connectionCount}</div>\n            </div>\n            {\n                list.map((item, index) => \n                    <div className=\"flex mt-6 flex-row items-center\" key={`reward-${index}`}>\n                        <div className=\"font-medium mr-6 text-gray-900\">{`${item.dayday} 리워드포인트 합계 :`}</div>\n                        <div className=\"font-medium text-2xl text-gray-600\">{item.reward}</div>\n                    </div>\n                )\n            }\n            \n        </div>\n    )\n}\n\nexport default StatsPage;","import { useState, useEffect } from 'react';\nimport { ArrowLeftIcon } from '@heroicons/react/solid'\nimport Paging from '../components/Paging';\nimport { withRouter } from 'react-router';\nimport { useParams } from 'react-router-dom'\nimport { apiUserTotalCount, apiUserList, apiUserPointHistory, apiUserPointHistoryTotalCount } from '../api/UserApi';\nimport { toast } from 'react-toastify';\n\n\nconst LIMIT = 20;\n\nconst UserPointListPage = withRouter((props) => {\n    const { history } = props\n    const { userId } = useParams()\n    const [totalCount, setTotalCount] = useState(0)\n    const [pageNo, setPageNo] = useState(1)\n    const [startNo, setStartNo] = useState(1)\n    const [totalPageCount, setTotalPageCount] = useState(1)\n    const [list, setList] = useState([])\n\n\n    useEffect(() => {        \n        getTotalCount()\n    }, [])\n\n    useEffect(() => {\n        if (totalCount > 0) {\n            if (totalCount > LIMIT) {\n                let pCount = totalCount / LIMIT;\n                if (totalCount % LIMIT > 0) {\n                    pCount += 1;\n                }\n                setTotalPageCount(pCount)\n            }\n        }\n\n        getPointHistory(pageNo, LIMIT);\n    }, [totalCount])\n\n\n    /*\n        API\n    */\n    async function getTotalCount() {\n        try {\n            const result = await apiUserPointHistoryTotalCount(userId);\n\n            console.log(result);\n\n            if (result && result.data) {\n                const { ok, count } = result.data;\n                if (ok) {\n                    setTotalCount(Number(count));\n                }\n            }\n        } catch (err) {\n            console.log(err)\n            toast.error(err);\n        }\n\n    }\n\n    async function getPointHistory(pageNo, limit) {\n        try {\n            const result = await apiUserPointHistory(userId, pageNo, limit);\n            console.log(result);\n            if (result && result.data) {\n                const { ok, list } = result.data;\n                if (ok) {\n                    setList(list);\n                }\n            }\n        } catch (err) {\n            console.log(err)\n            toast.error(err);\n        }\n    }\n\n    function goBack(e) {\n        e.preventDefault()\n        history.goBack()\n    }\n\n\n    /*\n        Rendering\n    */\n    function onClickNext() {\n        const newStartPageNo = startNo + 5\n        if (newStartPageNo <= totalPageCount) {\n            setStartNo(newStartPageNo)\n            setPageNo(newStartPageNo)\n            getPointHistory(newStartPageNo, LIMIT);\n        }\n    }\n\n    function onClickPrev() {\n        const newStartPageNo = startNo - 5\n        if (newStartPageNo >= 1) {\n            setStartNo(newStartPageNo)\n            setPageNo(newStartPageNo)\n            getPointHistory(newStartPageNo, LIMIT);\n        }\n    }\n\n    function onClickPageNo(page) {\n        if (pageNo === page) return\n        setPageNo(page)\n        getPointHistory(page, LIMIT);\n    }\n\n    function getDateTime(createdAt) {\n        const date = new Date(createdAt)\n        return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}`\n    }\n\n    function pointTypeText(pointType) {\n        if (pointType >= 11) {\n            return <div className=\"text-sm font-medium text-red-600\">사용</div>\n        } else {\n            return <div className=\"text-sm font-medium text-green-600\">적립</div>\n        }\n    }\n\n    return (\n        <div className=\"max-w-7xl mx-auto px-1 sm:px-5 lg:px-6\">\n            {/* TOP START*/}\n            <div className=\"flex flex-row py-5 items-center\">\n                <span className=\"sm:ml-3\">\n                    <button\n                        type=\"button\"\n                        className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                        onClick={goBack}\n                    >\n                        <ArrowLeftIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n                        뒤로가기\n                    </button>\n                </span>\n            </div>\n            {/* TOP END */}\n\n            {/* TABLE START */}\n            <div className=\"flex flex-col\">\n                <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                            <table className=\"min-w-full divide-y divide-gray-200\">\n                                <thead className=\"bg-gray-50\">\n                                    <tr>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            날짜\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            포인트\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            설명\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            타입\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"bg-white divide-y divide-gray-200\">\n                                    {list.map((item) => (\n                                        <tr key={item.id} className=\"hover:bg-gray-200 cursor-pointer\">\n                                            <td className=\"px-1 py-2 whitespace-nowrap\">\n                                                <div className=\"ml-4\">\n                                                    <div className=\"text-sm text-gray-900\">{getDateTime(item.createdAt)}</div>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                {item.point}\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm text-gray-900\">{item.description}</div>\n                                            </td>\n\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                                <div className=\"ml-4\">\n                                                    {pointTypeText(item.pointType)}\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                    {\n                                        list.length === 0 && <tr>\n                                            <td className=\"px-6 py-4 mx-auto\" colSpan=\"4\">\n                                                <div className=\"mx-auto text-sm text-gray-900 text-center\">최근 포인트 내역 없음</div>\n                                            </td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>                                        \n                                        </tr>\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n\n                <Paging\n                    totalCount={totalCount}\n                    pageNo={pageNo}\n                    startNo={startNo}\n                    pageCount={5}\n                    totalPageCount={totalPageCount}\n                    clickNext={onClickNext}\n                    clickPrev={onClickPrev}\n                    clickPageNo={onClickPageNo} />\n\n            </div>\n            {/* TABLE END */}\n\n        </div>\n\n    )\n})\n\nexport default UserPointListPage;","import { useState, useEffect } from 'react';\nimport { ArrowLeftIcon } from '@heroicons/react/solid'\nimport { withRouter } from 'react-router';\nimport { useParams } from 'react-router-dom'\nimport { apiUserCouponHistory } from '../api/UserApi';\nimport { toast } from 'react-toastify';\n\n\n\n\nconst UserCouponListPage = withRouter((props) => {\n    const { history } = props\n    const { userId } = useParams()    \n    const [list, setList] = useState([])\n\n\n    useEffect(() => {        \n        getCouponHistory()\n    }, [])\n\n\n    /*\n        API\n    */\n    async function getCouponHistory() {\n        try {\n            const result = await apiUserCouponHistory(userId);\n            console.log(result);\n            if (result && result.data) {\n                const { ok, list } = result.data;\n                if (ok) {\n                    setList(list);\n                }\n            }\n        } catch (err) {\n            console.log(err)\n            toast.error(err);\n        }\n    }\n\n    function goBack(e) {\n        e.preventDefault()\n        history.goBack()\n    }\n\n    function getDateTime(createdAt) {\n        const date = new Date(createdAt)\n        return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}`\n    }\n\n\n    return (\n        <div className=\"max-w-7xl mx-auto px-1 sm:px-5 lg:px-6\">\n            {/* TOP START*/}\n            <div className=\"flex flex-row py-5 items-center\">\n                <span className=\"sm:ml-3\">\n                    <button\n                        type=\"button\"\n                        className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                        onClick={goBack}\n                    >\n                        <ArrowLeftIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n                        뒤로가기\n                    </button>\n                </span>\n            </div>\n            {/* TOP END */}\n\n            {/* TABLE START */}\n            <div className=\"flex flex-col\">\n                <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                            <table className=\"min-w-full divide-y divide-gray-200\">\n                                <thead className=\"bg-gray-50\">\n                                    <tr>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            날짜\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            브랜드\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            상품명\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            코드\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            핀번호\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            가격\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            상태\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"bg-white divide-y divide-gray-200\">\n                                    {list.map((item) => (\n                                        <tr key={item.id} className=\"hover:bg-gray-200 cursor-pointer\">\n                                            <td className=\"px-1 py-2 whitespace-nowrap\">\n                                                <div className=\"ml-4\">                                                \n                                                    <div className=\"text-sm text-gray-900\">{getDateTime(item.createdAt)}</div>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm text-gray-900\">{item.brandName}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm text-gray-900\">{item.goodsName}</div>\n                                            </td>\n\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                                <div className=\"text-sm text-gray-900\">{item.goodsCode}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                                <div className=\"text-sm text-gray-900\">{item.pinNo}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                                <div className=\"text-sm text-gray-900\">{item.realPrice}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                                <div className=\"text-sm text-gray-900\">{item.status}</div>\n                                            </td>                                            \n                                        </tr>\n                                    ))}\n                                    {\n                                        list.length === 0 && <tr>\n                                            <td className=\"px-6 py-4 mx-auto\" colSpan=\"7\">\n                                                <div className=\"mx-auto text-sm text-gray-900 text-center\">쿠폰 목록 없음</div>\n                                            </td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                        </tr>\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* TABLE END */}\n\n        </div>\n\n    )\n})\n\nexport default UserCouponListPage;","import React from \"react\";\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport EventPage from \"../pages/EventPage\";\nimport NotifyPage from \"../pages/NotifyPage\";\nimport UserPage from \"../pages/UserPage\";\nimport StatsPage from \"../pages/StatsPage\";\nimport UserPointListPage from \"../pages/UserPointListPage\";\nimport UserCouponListPage from \"../pages/UserCouponListPage\";\n\nconst MainRoutes = () => (\n    <Switch>\n        <Route path=\"/\" component={UserPage} exact />\n        <Route path=\"/user\" component={UserPage} exact />\n        <Route path=\"/event\" component={EventPage} exact />\n        <Route path=\"/notify\" component={NotifyPage} exact />\n        <Route path=\"/stats\" component={StatsPage} exact />\n        <Route path=\"/user/point/:userId\" component={UserPointListPage} />\n        <Route path=\"/user/coupon/:userId\" component={UserCouponListPage} />\n        <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n);\n\nexport default MainRoutes;","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { withRouter } from 'react-router';\nimport { Fragment } from 'react'\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { UserCircleIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\nimport AppConstants from '../AppConstants';\nimport { setMenu } from '../redux/appSlice';\nimport TopMenu from '../components/TopMenu';\nimport MainRoutes from '../routes/MainRoutes';\nimport { setToken } from '../redux/authSlice';\n\nconst Main = withRouter((props) => {\n    \n    const { history } = props;\n    const menu = useSelector((state) => state.app.menu);\n    const dispatch = useDispatch();\n\n    const onClickMenu = (newMenu) => {    \n        console.log(newMenu)\n        history.push(newMenu.href)\n        dispatch(setMenu({ menu: newMenu }))\n    }\n\n    const onClickLogOut = (e) => {\n        e.preventDefault()\n        dispatch(setToken({ token: null }))\n    }\n\n    const onClickChangePassword = () => {        \n    }\n\n    return (\n        <>\n            <TopMenu\n                menu={menu}\n                onClickLogOut={onClickLogOut}\n                onClickChangePassword={onClickChangePassword}\n                onClickMenu={onClickMenu} />\n            <MainRoutes />\n        </>        \n    )\n});\n\nexport default Main;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport AuthRoutes  from \"./AuthRoutes\";\nimport Main from \"../pages/MainPage\";\n\nconst AppRouter = ({ isLoggedIn }) => (\n    isLoggedIn ? <Main /> : <AuthRoutes />\n);\n\nAppRouter.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired\n};\n\nexport default AppRouter;","\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ToastContainer } from 'react-toastify';\nimport Routes from \"./routes\";\nimport { setToken } from './redux/authSlice';\n\nfunction App() {\n  const token = useSelector((state) => state.auth.token)\n\n  const dispatch = useDispatch()\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const tk = localStorage.getItem(\"token\")\n    dispatch(setToken({ token: tk }))\n    setIsLoaded(() => true)\n  }, [])\n\n  return (\n    <div>\n      <Routes isLoggedIn={token !== null} />\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-toastify/dist/ReactToastify.css';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>            \n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}